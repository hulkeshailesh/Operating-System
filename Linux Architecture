Inside Linux
------------

Kernel
------
o The core of the UNIX system. Loaded at system start up (boot). Memory-resident control program.
o Manages the entire resources of the system, presenting them to you and every other user as a coherent system. Provides service to user applications such as device management, process scheduling, etc.
o Example functions performed by the kernel are:
	Managing the machine's memory and allocating it to each process.
	Scheduling the work done by the CPU so that the work of each user is carried out as efficiently as is possible.
	Accomplishing the transfer of data from one part of the machine to another
	Interpreting and executing instructions from the shell
	Enforcing file access permissions
o You do not need to know anything about the kernel in order to use a UNIX system. These details are provided for your information only.

Shell
------
o Whenever you login to a Unix system you are placed in a shell program. The shell's prompt is usually visible at the cursor's position on your screen. To get your work done, you enter commands at this prompt.
o The shell is a command interpreter; it takes each command and passes it to the operating system kernel to be acted upon. It then displays the results of this operation on your screen.
o Several shells are usually available on any UNIX system, each with its own strengths and weaknesses.
o Different users may use different shells. Initially, your system adminstrator will supply a default shell, which can be overridden or changed. The most commonly available shells are:
	Bourne shell (sh)
	C shell (csh)
	Korn shell (ksh)
	TC Shell (tcsh)
	Bourne Again Shell (bash)
o Each shell also includes its own programming language. Command files, called "shell scripts" are used to accomplish a series of tasks.

Utilities
---------
o UNIX provides several hundred utility programs, often referred to as commands.
o Accomplish universal functions
	editing
	file maintenance
	printing
	sorting
	programming support
	online info etc.
o Modular: single functions can be grouped to perform more complex tasks


Hardware layer
--------------
Linux operating system contains a hardware layer that consists of several peripheral devices like CPU, HDD, and RAM.


Linux Structure
---------------
Linux is a layered operating system. The innermost layer is the hardware that provides the services for the OS. 
The operating system, referred to in Linux as the kernel, interacts directly with the hardware and provides the services to the user programs. 
These user programs don’t need to know anything about the hardware. 
They just need to know how to interact with the kernel and it’s up to the kernel to provide the desired service. 
One of the big appeals of Linux to programmers has been that most well written user programs are independent of the underlying hardware, 
making them readily portable to new systems.

User programs interact with the kernel through a set of standard system calls. 
These system calls request services to be provided by the kernel. 
Such services would include accessing a file: open close, read, write, link, or execute a file; starting or updating accounting records; 
changing ownership of a file or directory; changing to a new directory; creating, suspending, or killing a process; 
enabling access to hardware devices; and setting limits on system resources.

Linux is a multi-user, multi-tasking operating system. You can have many users logged into a system simultaneously, each running many programs.
It’s the kernel’s job to keep each process and user separate and to regulate access to system hardware, including cpu, memory, disk and other I/O devices.
